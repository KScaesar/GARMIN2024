services:

  nginx:
    image: nginx:1.22.1
    hostname: nginx.vHost
    container_name: nginx
    restart: unless-stopped
    ports:
      - "8168:80"
    command: [ nginx, '-g', 'daemon off;' ]
    environment:
      - TZ=Asia/Taipei
      - NGINX_HOST=caesar.app.garmin
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./nginx-app.conf:/etc/nginx/conf.d/default.conf
      - ./nginx-proxy.conf:/etc/nginx/util/proxy.conf
      - ./nginx-cors.conf:/etc/nginx/util/cors.conf
    networks:
      - GARMIN_network
    depends_on:
      - app0
      - app1
      - app2


  app0:
    image: "x246libra/garmin2024:v0.4.2"
    hostname: app0.vHost
    container_name: garmin2024_app0
    restart: always
    ports:
      - 18168:8168
    environment:
      - TZ=Asia/Taipei
      - CONF_PATH=/app/configs/container.json
#    volumes:
#      - ../configs/container.json:/app/configs/container.json
    networks:
      - GARMIN_network
  app1:
    image: "x246libra/garmin2024:v0.4.2"
    hostname: app1.vHost
    container_name: garmin2024_app1
    restart: always
    environment:
      - TZ=Asia/Taipei
      - CONF_PATH=/app/configs/container.json
#    volumes:
#      - ../configs/container.json:/app/configs/container.json
    networks:
      - GARMIN_network
  app2:
    image: "x246libra/garmin2024:v0.4.2"
    hostname: app2.vHost
    container_name: garmin2024_app2
    restart: always
    environment:
      - TZ=Asia/Taipei
      - CONF_PATH=/app/configs/container.json
#    volumes:
#      - ../configs/container.json:/app/configs/container.json
    networks:
      - GARMIN_network


  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 18080:8080
    environment:
      - TZ=Asia/Taipei
      - DYNAMIC_CONFIG_ENABLED=true
    volumes:
      - ./kafka-ui-config.yaml:/etc/kafkaui/dynamic_config.yaml
    networks:
      - GARMIN_network
    depends_on:
      - kafka0
      - kafka1
      - kafka2
  kafka0:
    # https://github.com/apache/kafka/blob/trunk/config/kraft/server.properties
    # https://docs.confluent.io/platform/current/kafka-metadata/config-kraft.html#configuration-options

    image: 'bitnami/kafka:3.5.1'
    hostname: kafka0.vHost
    container_name: kafka0
    restart: always
    environment:
      - TZ=Asia/Taipei
      - KAFKA_MOUNTED_CONF_DIR=/bitnami/kafka/config/
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
    ports:
      - '19092:19092'   # external
    volumes:
      - ./kafka0.properties:/bitnami/kafka/config/server.properties
      - kafka0_data:/bitnami/kafka/data
    networks:
      - GARMIN_network
  kafka1:
    image: 'bitnami/kafka:3.5.1'
    hostname: kafka1.vHost
    container_name: kafka1
    restart: always
    environment:
      - TZ=Asia/Taipei
      - KAFKA_MOUNTED_CONF_DIR=/bitnami/kafka/config/
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
    ports:
      - '19093:19093'   # external
    volumes:
      - ./kafka1.properties:/bitnami/kafka/config/server.properties
      - kafka1_data:/bitnami/kafka/data
    networks:
      - GARMIN_network
  kafka2:
    image: 'bitnami/kafka:3.5.1'
    hostname: kafka2.vHost
    container_name: kafka2
    restart: always
    environment:
      - TZ=Asia/Taipei
      - KAFKA_MOUNTED_CONF_DIR=/bitnami/kafka/config/
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
    ports:
      - '19094:19094'   # external
    volumes:
      - ./kafka2.properties:/bitnami/kafka/config/server.properties
      - kafka2_data:/bitnami/kafka/data
    networks:
      - GARMIN_network


  prometheus:
    # https://github.com/bitnami/containers/tree/main/bitnami/prometheus

    # https://github.com/prometheus/prometheus/blob/main/documentation/examples/prometheus.yml
    # https://prometheus.io/docs/prometheus/latest/configuration/configuration/
    # https://prometheus.io/docs/guides/file-sd/#use-file-based-service-discovery-to-discover-scrape-targets

    image: bitnami/prometheus:2.52.0
    container_name: prometheus
    hostname: prometheus.vHost
    restart: unless-stopped
    environment:
      - TZ=Asia/Taipei
    ports:
      - 9090:9090
    volumes:
      - prometheus_data:/opt/bitnami/prometheus/data
      - ./prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml
    command:
      - "--config.file=/opt/bitnami/prometheus/conf/prometheus.yml"
      - "--storage.tsdb.retention.time=7d"   # 保留 7 天數據
      - "--storage.tsdb.retention.size=50GB"  # 限制數據佔用 50GB 空間

    networks:
      - GARMIN_network
#    network_mode: "host"


  grafana:
    # https://grafana.com/docs/grafana/latest/setup-grafana/start-restart-grafana/#docker-compose-example
    # https://grafana.com/docs/grafana/latest/setup-grafana/installation/docker/
    # https://grafana.com/docs/grafana/latest/setup-grafana/configure-docker/#default-paths
    # https://grafana.com/docs/grafana/latest/administration/provisioning/#data-sources

    # https://github.com/grafana/grafana/blob/main/conf/defaults.ini
    # https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/
    # https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/#override-configuration-with-environment-variables

    image: grafana/grafana:10.4.3-ubuntu
    container_name: grafana
    hostname: grafana.vHost
    restart: unless-stopped
    environment:
      - TZ=Asia/Taipei
      - GF_INSTALL_PLUGINS=grafana-clock-panel
      - GF_SECURITY_ADMIN_USER=root
      - GF_SECURITY_ADMIN_PASSWORD=1234
    ports:
      - '3000:3000'
    volumes:
      - 'grafana_data:/var/lib/grafana'

    networks:
      - GARMIN_network
#    network_mode: "host"

volumes:
  grafana_data:
    name: grafana_data

  prometheus_data:
    name: prometheus_data

  kafka0_data:
    name: kafka0_data
  kafka1_data:
    name: kafka1_data
  kafka2_data:
    name: kafka2_data

networks:
  GARMIN_network:
    name: GARMIN_network
    driver: bridge
